//https://control.com/technical-articles/plc-ladder-logic-on-an-arduino-introduction-to-openplc/
//https://github.com/akelmas/kn_plc
//https://github.com/taleswsouza/LadderApp/blob/master/images/ladderapp-running.gif
/*
Blink
*/

int led=13;
// 

void setup() {

// 

pinMode(led, OUTPUT);


// loop funct. works repeatedly
void loop() {
digitalWrite(13, HIGH); //LED (HIGH voltage level)
delay(1000); // 1 moment wait
digitalWrite(13, LOW); // LOW voltage and close LED
delay(1000); // 1 moment wait

switchState = ReadSwitchState (whichSwitch);
if (switchState) {
TurnSwitchOff (whichSwitch);
} else {
TurnSwitchOn (whichSwitch);
}
arrays
int myData [15];
long yourWorkDay [7];
float sıcaklık [200];



Structured text

PROGRAM firstProgram
VAR
    x: BOOL;   (* Boolean variable *)
    y: INT;    (* Integer variable *)
END_VAR

x := TRUE;   (* Set x to TRUE *)
y := 42;     (* Set y to 42 *)

IF x THEN
    y := y + 1;   (* Increment y if x is TRUE *)
END_IF

C CODE

#include <stdio.h>

int main() {
    int switchInput = 0; // Anahtar girişi
    int motorOutput = 0; // Motor çıkışı

    while (1) {
        // Anahtar girişini oku
        printf("Anahtar durumu (0 veya 1): ");
        scanf("%d", &switchInput);

        // Motor çıkışını kontrol et
        if (switchInput == 1) {
            motorOutput = 1; // Motoru aç
        } else {
            motorOutput = 0; // Motoru kapat
        }

        // Motor durumunu göster
        printf("Motor Durumu: %d\n", motorOutput);
    }

    return 0;
}

#include <stdio.h>

int main() {
    int input1, input2;
    int output;

    // Girişlerden veri okuma
    printf("Giriş 1 değeri: ");
    scanf("%d", &input1);
    
    printf("Giriş 2 değeri: ");
    scanf("%d", &input2);

    // Mantıksal işlem
    if (input1 == 1 && input2 == 1) {
        output = 1;
    } else {
output = 0;
    }

    // Çıktıyı gösterme
    printf("Çıkış değeri: %d\n", output);

    return 0;
}


#include <stdio.h>
#include <stdbool.h>
#include <unistd.h>

// Define PLC Inputs
bool sensor1 = false; // Conveyor belt start sensor
bool sensor2 = false; // Conveyor belt stop sensor

// Define PLC Outputs
bool motorOn = false; // Conveyor belt motor status

void startConveyorBelt() {
    if (sensor1 && !sensor2) {
        motorOn = true;
    } else {
        motorOn = false;
    }
}

int main() {
    while (true) {
        // Simulate sensor input changes
        sensor1 = !sensor1;
        sensor2 = !sensor2;

        // Execute PLC logic
        startConveyorBelt();

        // Simulate conveyor belt operation
        if (motorOn) {
            printf("Conveyor belt is running.\n");
        } else {
            printf("Conveyor belt is stopped.\n");
        }

        // Sleep to simulate real-time operation
        usleep(1000000); // Sleep for 1 second
    }

    return 0;
}





